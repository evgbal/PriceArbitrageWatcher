plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'com.google.dagger.hilt.android' //version '2.55' apply false
}

android {
    compileSdk 35
    namespace "org.bea.pricearbitragewatcher"

    defaultConfig {
        applicationId "org.bea.pricearbitragewatcher"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunner "dagger.hilt.android.testing.HiltTestRunner"
//        testInstrumentationRunner "dagger.hilt.android.testing.HiltTestRunner"
        testInstrumentationRunner "org.bea.pricearbitragewatcher.CustomTestRunner"
    
      // Читаем ключи из local.properties
        def properties = new Properties()
        def localPropertiesFile = rootProject.file("local.properties")
        if (localPropertiesFile.exists()) {
            properties.load(new FileInputStream(localPropertiesFile))
        }

        buildConfigField "String", "GATE_IO_API_KEY", "\"${properties.getProperty("GATE_IO_API_KEY", "")}\""
        buildConfigField "String", "GATE_IO_API_SECRET", "\"${properties.getProperty("GATE_IO_API_SECRET", "")}\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental": "true"
                ]
            }
        }
    }


    buildFeatures {
        viewBinding true
        buildConfig true
    }
//    viewBinding {
//        enabled = true








//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17


    }
    kotlinOptions {
        jvmTarget = '17'
    }



    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }


    packagingOptions {
        resources {
            pickFirsts += ['META-INF/AL2.0', 'META-INF/LGPL2.1'] // Избегаем конфликтов
        }
    }

}

// Enable KSP
ksp {
//    arg("dagger.hilt.disableModulesHaveInstallInCheck", "true") // Optional: Disable install-in check if needed
    arg("room.schemaLocation", "$projectDir/schemas")
//    arg("dagger.hilt.android.internal.disableAndroidSuperclassValidation", "true")
}

hilt {
    enableAggregatingTask = true
    //enableTransformForLocalTests = true
}

dependencies {
    // Основные зависимости
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.datastore:datastore-core-android:1.1.3'
    implementation 'com.google.ar:core:1.48.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    debugImplementation 'androidx.fragment:fragment-testing:1.8.6'
    ksp 'com.github.bumptech.glide:ksp:4.16.0'
    implementation 'com.caverock:androidsvg-aar:1.4'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.8.6'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.55'
    androidTestImplementation ('com.google.dagger:hilt-android-testing:2.55') {
        exclude group: 'com.google.dagger', module: 'hilt-android' // Исключаем возможные дубли
    }
    ksp 'com.google.dagger:dagger-compiler:2.55'
    ksp 'com.google.dagger:hilt-compiler:2.55'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.9'

    // Room
    implementation 'androidx.room:room-common:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    implementation 'androidx.room:room-runtime:2.6.1'
    ksp 'androidx.room:room-compiler:2.6.1'

    // Flexbox
    //implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0'

    // Тестовые зависимости (Unit Tests)
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0' // Попробуем более раннюю версию
    testImplementation 'org.robolectric:robolectric:4.12.2'
    testImplementation 'app.cash.turbine:turbine:1.0.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'com.google.dagger:hilt-android-testing:2.55'

    // Инструментальные тесты (Android Tests)
    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    debugImplementation 'androidx.fragment:fragment-testing:1.8.6'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.55'
    kspAndroidTest 'com.google.dagger:hilt-compiler:2.55'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'
    androidTestImplementation 'org.mockito:mockito-android:5.12.0'
    androidTestImplementation 'org.mockito.kotlin:mockito-kotlin:5.3.1'
}

// Принудительное указание версии для androidx.test:core
configurations.configureEach {
    resolutionStrategy {
        force 'androidx.test:core:1.6.1'
        force 'com.google.dagger:hilt-android-testing:2.55' // Принудительно включаем Hilt
    }}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:deprecation" // Включаем подробные предупреждения
    //options.compilerArgs << "-nowarn" // Подавляет все предупреждения
}

tasks.withType(Test).configureEach {
    systemProperty "robolectric.enabledSdks", "34"
}
