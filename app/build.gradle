plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 35
    namespace "org.bea.pricearbitragewatcher"

    defaultConfig {
        applicationId "org.bea.pricearbitragewatcher"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "dagger.hilt.android.testing.HiltTestRunner"
    
      // Читаем ключи из local.properties
        def properties = new Properties()
        def localPropertiesFile = rootProject.file("local.properties")
        if (localPropertiesFile.exists()) {
            properties.load(new FileInputStream(localPropertiesFile))
        }

        buildConfigField "String", "GATE_IO_API_KEY", "\"${properties.getProperty("GATE_IO_API_KEY", "")}\""
        buildConfigField "String", "GATE_IO_API_SECRET", "\"${properties.getProperty("GATE_IO_API_SECRET", "")}\""


    }


    buildFeatures {
        viewBinding true
        buildConfig true
    }
//    viewBinding {
//        enabled = true








//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17


    }
    kotlinOptions {
        jvmTarget = '17'
    }



    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }


}

// Enable KSP
ksp {
    arg("dagger.hilt.disableModulesHaveInstallInCheck", "true") // Optional: Disable install-in check if needed
    arg("room.schemaLocation", "$projectDir/schemas")
//    arg("dagger.hilt.android.internal.disableAndroidSuperclassValidation", "true")
}

//hilt {
//    enableAggregatingTask = true
//}

dependencies {

    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    //implementation 'com.github.telegram:telegram-design-system:7.8.1'
    //implementation 'com.github.bumptech.glide:glide:4.15.1'


    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'androidx.datastore:datastore-core-android:1.1.3'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'


    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'

    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.8.6' // viewModels()


    implementation "com.google.dagger:hilt-android:2.55"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.8'
    implementation 'androidx.room:room-common:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    implementation "androidx.room:room-runtime:2.6.1"

    ksp "androidx.room:room-compiler:2.6.1"
    ksp "com.google.dagger:hilt-compiler:2.55"

    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Конвертер JSON (Moshi или Gson)
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // OkHttp (для логирования запросов)
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    implementation 'androidx.test:runner:1.6.2'
    implementation 'androidx.test.ext:junit-ktx:1.2.1'
    testImplementation 'com.google.dagger:hilt-android-testing:2.55'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // JUnit для тестов
    //testImplementation("junit:junit:4.13.2")

    // AndroidX Test (JUnit4 и фреймворк для Android-тестов)
    //androidTestImplementation("androidx.test.ext:junit:1.1.5")
    //androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:core:1.6.1'

    // Для тестирования LiveData и StateFlow
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    // Fragment Testing
    debugImplementation 'androidx.fragment:fragment-testing:1.8.6'

    // Hilt для тестирования
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.55'
    kspAndroidTest 'com.google.dagger:hilt-compiler:2.55'

    testImplementation 'app.cash.turbine:turbine:1.0.0'
    // Coroutines (для runTest и тестов с Flow)
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.9.0'

    testImplementation 'org.robolectric:robolectric:4.12.2'

    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.2.1'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'net.bytebuddy:byte-buddy:1.14.15'
    androidTestImplementation 'org.mockito:mockito-android:5.12.0'

    //kapt 'com.github.bumptech.glide:compiler:4.15.1' // For annotation processing if required    testImplementation 'junit:junit:4.13.2'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:deprecation" // Включаем подробные предупреждения
    options.compilerArgs << "-nowarn" // Подавляет все предупреждения
}

tasks.withType(Test).configureEach {
    systemProperty "robolectric.enabledSdks", "34"
}
